{"version":3,"sources":["images/logo.png","images/manju.jpg","images/APTA.jpg","components/footer.jsx","components/navbar.jsx","components/about.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","href","class","NavBar","src","logo","alt","About","Fragment","manju","APTA","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,+KCc5BC,EAZA,kBACb,yBAAKC,UAAU,UACb,sEACA,6CACA,6BACE,uBAAGC,KAAK,8CAA6C,uBAAGD,UAAU,6BAClE,uBAAGC,KAAK,qCAAoC,uBAAGD,UAAU,0BACzD,uBAAGC,KAAK,iEAAgE,uBAAGC,MAAM,iC,iBCaxEC,EAnBA,WACb,OACE,4BAAQH,UAAU,OAChB,yBAAKA,UAAU,WACb,yBAAKI,IAAKC,IAAMC,IAAI,0BACpB,8DAIF,yBAAKN,UAAU,YACb,sCACA,yCACA,0CACA,2C,kCC0BOO,EApCD,kBACZ,kBAAC,IAAMC,SAAP,KACI,kBAAC,EAAD,MACA,6BACE,yBAAKR,UAAU,YACb,yBAAKA,UAAU,kBAAf,iCACA,yBAAKA,UAAU,mBACb,4EACA,mDAGJ,yBAAKA,UAAU,YACb,oEACA,8OAEF,yBAAKA,UAAU,aACb,6BACE,+EACA,8KAGJ,yBAAKA,UAAU,SACb,yBAAKI,IAAKK,IAAOH,IAAI,0BACrB,6BACE,0CACA,inBAGJ,yBAAKN,UAAU,QACf,uBAAGC,KAAK,wBAAuB,yBAAKG,IAAKM,IAAMJ,IAAI,YAGrD,kBAAC,EAAD,QCzBSK,EARH,kBACV,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,OCInBQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WCXNC,IAASC,OAAO,kBAAC,IAAD,KAAY,kBAAC,EAAD,OAAsBC,SAASC,eAAe,SD0HpE,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ce40eb87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.716dea34.png\";","module.exports = __webpack_public_path__ + \"static/media/manju.95681c4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/APTA.e97b9c9e.jpg\";","import React from \"react\";\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <div>mthomas@smartmovesphysicaltherapy.com</div>\n    <div>678-372-7972</div>\n    <div>\n      <a href=\"https://www.facebook.com/floralparknewyork\"><i className=\"fab fa-facebook-f fa-lg\" /></a>\n      <a href=\"https://twitter.com/movesphysical\"><i className=\"fab fa-twitter fa-lg\" /></a>\n      <a href=\"https://www.linkedin.com/company/smart-moves-physical-therapy\"><i class=\"fab fa-linkedin-in fa-lg\" /></a>\n    </div>\n  </div>\n)\n\nexport default Footer;","import React from \"react\";\nimport logo from '../images/logo.png';\n\nconst NavBar = () => {\n  return(\n    <header className=\"nav\">\n      <nav className=\"leftnav\">\n        <img src={logo} alt=\"home physical therapy\" />\n        <div>\n          Smart Moves Physical Therapy\n        </div>\n      </nav>\n      <nav className=\"rightnav\">\n        <div>About</div>\n        <div>Services</div>\n        <div>Insurance</div>\n        <div>Contact</div>\n      </nav>\n    </header>\n  )\n}\n\nexport default NavBar;","import React from \"react\";\nimport Footer from './footer';\nimport NavBar from './navbar';\nimport manju from '../images/manju.jpg';\nimport APTA from '../images/APTA.jpg';\n\nconst About = () => (\n  <React.Fragment>\n      <NavBar />\n      <div>\n        <div className=\"overview\">\n          <div className=\"overviewheader\">Physical therapy in your home</div>\n          <div className=\"overviewcaption\">\n            <div>Serves Queens, Nassau county, and Manhattan</div>\n            <div>Accepts Medicare</div>\n          </div>\n        </div>\n        <div className=\"research\">\n          <div>Get better quickly and conveniently</div>\n          <p>Smart moves provides high-quality, effective, evidence-based physical therapy in your home.  Research shows no difference in outcomes between physical therapy in the home and physical therapy at a facility.</p>\n        </div>\n        <div className=\"homeimage\">\n          <div>\n            <div>Enhance your health, fitness, and independence</div>\n            <p>Smart moves manages movement and balance disorders (fall prevention), and back, hip, knee, ankle, foot, neck, shoulder, and elbow conditions.</p>\n          </div>\n        </div>\n        <div className=\"story\">\n          <img src={manju} alt=\"home physical therapy\"/>\n          <div>\n            <div>Our story</div>\n            <p>A physical therapist since 1999, and frustrated with the hastened care at outpatient facilities, Manju Thomas turned to home visits to thoughtfully deliver high-quality one on one care.  She enjoys working with the older adult population to promote function and return to activity.  She received her Master’s in Physical Therapy from Washington University in St. Louis (#1 ranked physical therapy school). She also holds a Bachelor’s in Chemistry from Cornell University, and a Master’s in Business Administration from Duke University. She is Otago trained for fall prevention.</p>\n          </div>\n        </div>\n        <div className=\"APTA\">\n        <a href=\"http://www.apta.org/\"><img src={APTA} alt=\"APTA\" /></a> \n        </div>\n      </div>\n      <Footer />\n  </React.Fragment>\n)\n\nexport default About;","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport About from './components/about';\n\nconst App = () => (\n  <div>\n    <Switch>\n      <Route exact path=\"/\" component={About} />\n    </Switch>\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}